name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  INGESTIONAPI_IMAGENAME: ingestion-api
  CALCULATIONAPI_IMAGENAME: calculation-api
  MODELAPI_IMAGENAME: model-api

jobs:
  build:
    name: Build Container Images
    runs-on: ubuntu-latest
    outputs:
      containerVersion: ${{ steps.ContainerVersion.outputs.Version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

      - id: ContainerVersion
        run: echo "::set-output name=Version::${{ steps.gitversion.outputs.Major }}.${{ steps.gitversion.outputs.Minor }}.${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"

      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_ENDPOINT }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          file: ./src/Ingestion.API/Dockerfile
          context: .
          push: true
          build-args: |
            version=${{ steps.tag.outputs.tag }}
          tags: "${{ secrets.ACR_ENDPOINT }}/${{ env.INGESTIONAPI_IMAGENAME }}:${{ steps.ContainerVersion.outputs.Version }}"

      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          file: ./src/Calculation.API/Dockerfile
          context: ./src/Calculation.API
          push: true
          build-args: |
            version=${{ steps.tag.outputs.tag }}
          tags: "${{ secrets.ACR_ENDPOINT }}/${{ env.CALCULATIONAPI_IMAGENAME }}:${{ steps.ContainerVersion.outputs.Version }}"

      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          file: ./src/Model.API/Dockerfile
          context: ./src/Model.API
          push: true
          build-args: |
            version=${{ steps.tag.outputs.tag }}
          tags: "${{ secrets.ACR_ENDPOINT }}/${{ env.MODELAPI_IMAGENAME }}:${{ steps.ContainerVersion.outputs.Version }}"          

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy bicep
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az group create -g ${{ secrets.RESOURCE_GROUP }} -l uksouth
            az deployment group create -g ${{ secrets.RESOURCE_GROUP }} -f ./deploy/main.bicep \
             -p \
                minReplicas=0 \
                dotnetImage='${{ secrets.ACR_ENDPOINT }}/${{ env.INGESTIONAPI_IMAGENAME }}:${{needs.build.outputs.containerVersion}}' \
                dotnetPort=5000 \
                pythonImage='${{ secrets.ACR_ENDPOINT }}/${{ env.CALCULATIONAPI_IMAGENAME }}:${{needs.build.outputs.containerVersion}}' \
                pythonPort=8000 \
                rImage='${{ secrets.ACR_ENDPOINT }}/${{ env.MODELAPI_IMAGENAME }}:${{needs.build.outputs.containerVersion}}' \
                rPort=8000 \
                containerRegistry=${{ secrets.ACR_ENDPOINT }} \
                containerRegistryUsername=${{ secrets.ACR_USERNAME }} \
                containerRegistryPassword=${{ secrets.ACR_PASSWORD }}

